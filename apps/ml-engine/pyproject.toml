[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "streamforge-ml-engine"
version = "0.1.0"
description = "AI-driven anomaly detection and machine learning engine for StreamForge"
authors = [
    {name = "StreamForge Team", email = "team@streamforge.dev"}
]
license = {text = "Apache-2.0"}
readme = "README.md"
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: System :: Monitoring",
    "Topic :: System :: Networking :: Monitoring",
]
keywords = ["machine-learning", "anomaly-detection", "observability", "streaming", "ai"]
dependencies = [
    # Core ML libraries
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "scikit-learn>=1.3.0",
    "scipy>=1.10.0",
    
    # Deep learning
    "torch>=2.0.0",
    "torchvision>=0.15.0",
    "transformers>=4.30.0",
    
    # Time series analysis
    "statsmodels>=0.14.0",
    "prophet>=1.1.0",
    "pykalman>=0.9.5",
    
    # Anomaly detection
    "pyod>=1.1.0",
    "isolation-forest>=0.2.0",
    "lof>=0.1.0",
    
    # MLflow for experiment tracking
    "mlflow>=2.5.0",
    "mlflow-skinny>=2.5.0",
    
    # Feature store
    "feast>=0.36.0",
    
    # Data processing
    "polars>=0.19.0",
    "duckdb>=0.8.0",
    "pyarrow>=12.0.0",
    
    # Async and networking
    "aiohttp>=3.8.0",
    "asyncio-mqtt>=0.13.0",
    "kafka-python>=2.0.0",
    
    # Database
    "sqlalchemy>=2.0.0",
    "psycopg2-binary>=2.9.0",
    "redis>=4.5.0",
    "clickhouse-connect>=0.6.0",
    
    # Configuration
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    
    # Logging and monitoring
    "structlog>=23.1.0",
    "prometheus-client>=0.17.0",
    "opentelemetry-api>=1.20.0",
    "opentelemetry-sdk>=1.20.0",
    "opentelemetry-exporter-jaeger>=1.20.0",
    
    # Utilities
    "click>=8.1.0",
    "rich>=13.0.0",
    "tqdm>=4.65.0",
    "python-dateutil>=2.8.0",
    "pytz>=2023.3",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "black>=23.7.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
    "jupyter>=1.0.0",
    "ipykernel>=6.25.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    "plotly>=5.15.0",
]

gpu = [
    "torch[cuda]>=2.0.0",
    "torchvision[cuda]>=0.15.0",
]

distributed = [
    "ray>=2.6.0",
    "dask>=2023.8.0",
    "dask-ml>=2023.3.0",
]

[project.scripts]
streamforge-ml = "streamforge_ml_engine.cli:main"

[project.urls]
Homepage = "https://github.com/bskcorona-github/streamforge"
Documentation = "https://docs.streamforge.dev"
Repository = "https://github.com/bskcorona-github/streamforge"
"Bug Tracker" = "https://github.com/bskcorona-github/streamforge/issues"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"*" = ["*.json", "*.yaml", "*.yml", "*.proto"]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["streamforge_ml_engine"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "sklearn.*",
    "torch.*",
    "transformers.*",
    "mlflow.*",
    "feast.*",
    "kafka.*",
    "redis.*",
    "clickhouse_connect.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=streamforge_ml_engine",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src/streamforge_ml_engine"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
] 